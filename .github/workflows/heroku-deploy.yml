name: Heroku Deployment

on:
  push:
    branches: [ main, master ]

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          cat > ~/.netrc << EOF
          machine api.heroku.com
            login ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_KEY }}
          machine git.heroku.com
            login ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_KEY }}
          EOF
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Create Heroku Backend App
        run: |
          heroku apps:info -a lib-mgmt-dl-ezo || heroku create lib-mgmt-dl-ezo --team dartslive
          # Set stack to container
          heroku stack:set container -a lib-mgmt-dl-ezo
          # Add PostgreSQL addon if it doesn't exist
          heroku addons:info postgresql -a lib-mgmt-dl-ezo || heroku addons:create heroku-postgresql:essential-0 -a lib-mgmt-dl-ezo
      
      - name: Login to Heroku Container Registry
        run: |
          heroku container:login
      
      - name: Build and Push Backend Docker Image
        run: |
          cd backend
          docker build -t registry.heroku.com/lib-mgmt-dl-ezo/web .
          docker push registry.heroku.com/lib-mgmt-dl-ezo/web
      
      - name: Release Backend
        run: |
          heroku container:release web -a lib-mgmt-dl-ezo
          
  deploy-frontend:
    runs-on: ubuntu-latest
    needs: deploy-backend
    steps:
      - uses: actions/checkout@v3
      
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          cat > ~/.netrc << EOF
          machine api.heroku.com
            login ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_KEY }}
          machine git.heroku.com
            login ${{ secrets.HEROKU_EMAIL }}
            password ${{ secrets.HEROKU_API_KEY }}
          EOF
      
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Create Heroku Frontend App
        run: |
          heroku apps:info -a lib-mgmt-dl-ezo-frontend || heroku create lib-mgmt-dl-ezo-frontend --team dartslive
          # Set stack to container
          heroku stack:set container -a lib-mgmt-dl-ezo-frontend
      
      - name: Set Backend URL
        run: |
          heroku config:set API_URL=https://lib-mgmt-dl-ezo.herokuapp.com -a lib-mgmt-dl-ezo-frontend
      
      - name: Login to Heroku Container Registry
        run: |
          heroku container:login
      
      - name: Build and Push Frontend Docker Image
        run: |
          cd frontend
          docker build -t registry.heroku.com/lib-mgmt-dl-ezo-frontend/web .
          docker push registry.heroku.com/lib-mgmt-dl-ezo-frontend/web
      
      - name: Release Frontend
        run: |
          heroku container:release web -a lib-mgmt-dl-ezo-frontend
